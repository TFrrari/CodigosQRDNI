QROracleConnector v0.7 - Manual de instalación y uso
Fecha: 2025-09-18

REQUISITOS:
- Windows + Visual Studio 2022 (17.x)
- .NET Framework 4.8 Developer Pack
- Acceso a Oracle (host/puerto/SERVICE_NAME, usuario y password)
- No requiere cliente Oracle: usa Oracle.ManagedDataAccess (ODP.NET Managed)

CONTENIDO:
- Version_NoUI\ -> Solución de consola para probar conexión/consultas sin UI
- Version_UI\   -> Solución WinForms con pantalla para conexión, tablas, describe, preview, upsert
- Ambas versiones incluyen:
  - QrOracleConnector.Core (librería con IQrOracleService y lógica Oracle)
  - Config\connection.json (plantilla para armar la connection string)
  - PlanillaConexion_v0.7.csv (planilla de parámetros)

PASOS DE INSTALACIÓN (ambas versiones):
1) Abrir la solución correspondiente en Visual Studio 2022:
   - OracleConnector_v0.7_NoUI.sln  (consola)
   - OracleConnector_v0.7_UI.sln     (WinForms)
2) Restaurar paquetes NuGet (se hace solo). Debe bajar Oracle.ManagedDataAccess 23.9.1.
3) Opcional: editar Config\connection.json con tus datos reales:
   {
     "Host": "localhost",
     "Port": 1521,
     "ServiceName": "XEPDB1",
     "UserId": "USR_QR",
     "Password": "CAMBIAR"
   }
4) Compilar en Debug | Any CPU.

USO - SIN UI (consola):
- Ejecutar proyecto OracleConnector.ConsoleApp.
- Si existe Config\connection.json, lo carga. Si no, pegar la connection string a mano.
- Flujo:
  a) Muestra USER y testea conexión (SELECT 1 FROM DUAL)
  b) Pregunta si desea CREAR/VERIFICAR estructura PACIENTES (tabla/seq/trigger)
  c) Lista tablas del esquema (USER_TABLES)
  d) Preview de una tabla (Top 100 filas)
  e) Upsert desde QR (formato: DNI=...;APELLIDO=...;NOMBRE=...;FECHA_NAC=AAAA-MM-DD)

USO - CON UI (WinForms):
- Ejecutar proyecto OracleConnector.WinFormsApp.
- Botón "Cargar planilla": toma Config\connection.json y arma la connection string.
- "Probar conexión": verifica SELECT 1 FROM DUAL y muestra USER.
- "Probar y Listar": conexión + llena el combo con tablas.
- "Estructura PACIENTES": crea/asegura tabla, secuencia y trigger.
- "Describe Tabla": columnas (nombre, tipo, tamaño, nullability).
- "Ver 100 filas": preview de la tabla seleccionada en el grid.
- "Upsert desde QR": inserta/actualiza paciente por DNI.

ESQUEMA ESPERADO (si usas PACIENTES):
- Tabla PACIENTES(ID_PACIENTE NUMBER PK, DNI VARCHAR2(20) UNIQUE, APELLIDO VARCHAR2(100), NOMBRE VARCHAR2(100), FECHA_NAC DATE)
- Secuencia SEQ_PACIENTES
- Trigger TRG_PACIENTES_AI para autoincrementar ID_PACIENTE

NOTAS:
- Toda la lógica de BD está parametrizada (BindByName, OracleDbType).
- La API pública es async por compatibilidad de UI, pero internamente usa operaciones sincrónicas (ODP.NET Managed para net48).
- Si tu esquema difiere, ajusta OraclePatientRepository.cs (SQL DDL y DML).

SOPORTE:
- Si ves ORA-xxxx, valida host/puerto/SERVICE_NAME, credenciales, privileges (CREATE TABLE/SEQUENCE/TRIGGER) y red.
- Para entornos restringidos, desactiva "Estructura PACIENTES" y usa objetos ya creados por DBA.
